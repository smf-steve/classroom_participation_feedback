#! /bin/bash

# LIST of relevant files and their locations
export CLASS_INFO="class_info"

# Reset Relevant Environment Variables
export TZ=America/Los_Angeles
export DATE=$(date)
export FULL_DATE=$(date +%F)
export WEEKDAY=$(date +%A )
export DAY=$(date +%d | sed 's/^0//' )
export MONTH=$(date +%m | sed 's/^0//' )
export HOUR=$(date +%H | sed 's/^0//' )
export MINUTE=$(date +%M | sed 's/^//' )

export CLASS=
export CLASS_DAYS=
export CLASS_WEEKDAY=
export CLASS_TIME=

# the default information for recording information.
export DESCRIPTION
export PROMPT
export RECORDED_ATTENDEES

[[ -z ${DESCRIPTION} ]]        && DESCRIPTION="&lt;unspecified&gt;"
[[ -z ${PROMPT} ]]             && PROMPT="Provide general feedback to today's class."
[[ -z ${RECORDED_ATTENDEES} ]] && RECORDED_ATTENDEES="--"



function lookup_class () {
  _day=$1
  _hour_min=$2

  while read _c _d _s _w _begin _end cat ; do
    [[ $_c == "#" ]]              && continue # Comment
    [[ $_day != $_w ]]            && continue # Not the right day
    [[ $_hour_min -lt $_begin ]]  && continue # Before the start hour
    [[ $_hour_min -gt $_end  ]]   && continue # After the end hour
    echo $_c $_d $_s $_w $_begin $_end
    break
  done < ${CLASS_INFO}
}



function in_session_p() {
  in_session=0
  if [[ -z $CLASS ]] ; then
    in_session=1
    # Class is not in session
  fi

  return $in_session
}


CLASS_RECORD=$(lookup_class $WEEKDAY $HOUR$MINUTE )

if [[ -n $CLASS_RECORD ]] ; then 
  CLASS=$(awk '{ print $1}'          <<< $CLASS_RECORD )
  CLASS_DAYS=$(awk '{ print $2}'     <<< $CLASS_RECORD )
  CLASS_TIME=$(awk '{ print $3}'     <<< $CLASS_RECORD )
  CLASS_WEEKDAY=$(awk '{ print $3}'  <<< $CLASS_RECORD )
fi


# Then reset the information if class is in session
in_session_p
if [[ $? == 0 ]]  ; then
  REPORT_FILE=./reports/$FULL_DATE:$CLASS-$CLASS_WEEKDAY-$CLASS_TIME.env

  if [[ -f ${REPORT_FILE} ]] ; then
    source ${REPORT_FILE}
  fi
fi 
