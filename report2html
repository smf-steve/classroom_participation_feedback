#! /bin/bash

# Start of report2html

cat <<EOF
<style>
.tooltip {
  position: relative;
  display: inline-block;
  border-bottom: 1px dotted black;
}

.tooltip .tooltiptext {
  visibility: hidden;
  width: 120px;
  background-color: black;
  color: #fff;
  text-align: center;
  border-radius: 6px;
  padding: 5px 0;

  /* Position the tooltip */
  position: absolute;
  z-index: 1;
}

.tooltip:hover .tooltiptext {
  visibility: visible;
}
.frame {
    overflow-y: auto;
    border: 1px solid black;
    line-height: 16pt;
}

.frame::-webkit-scrollbar {
    -webkit-appearance: none;
}

.frame::-webkit-scrollbar:vertical {
    width: 11px;
}

.frame::-webkit-scrollbar:horizontal {
    height: 11px;
}

.frame::-webkit-scrollbar-thumb {
    border-radius: 8px;
    border: 2px solid white; /* should match background, can't be transparent */
    background-color: rgba(0, 0, 0, .5);
}
</style>
EOF

_chart_id=0;
function present_chart () {
   (( chart_id++))

cat <<EOF
    <script type="text/javascript">
      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawVisualization);

      function drawVisualization() {
        // Some raw data (not necessarily accurate)
        var data = google.visualization.arrayToDataTable([
          ['Number', 'Value', 'Median', 'Mean', 'Mode'],
EOF
echo "['', 0,  ${RATING_MEDIAN}, ${RATING_AVERAGE}, ${RATING_MODE} ],"
for ((i=0; i< ${#RATINGS[@]}; i++)) ; do
    echo "['', ${RATINGS[i]}, ${RATING_MEDIAN}, ${RATING_AVERAGE}, ${RATING_MODE} ],"
done
echo "['', 0,  ${RATING_MEDIAN}, ${RATING_AVERAGE}, ${RATING_MODE} ]"

cat <<EOF
        ]);

      var options = {
          hAxis: {title: 'Median: ${RATING_MEDIAN}, Mean: ${RATING_AVERAGE}, Mode: ${RATING_MODE}, Count: ${#RATINGS[@]}' },
          vAxis: {minValue: 0, maxValue: 10},
          seriesType: 'bars',
          legend: { position: 'none'},
          series: { 1:{type: 'line'},
                    2:{type: 'line'},
                    3:{type: 'line'}}
        };


        var chart_${chart_id} = new google.visualization.ComboChart(document.getElementById('chart_${chart_id}'));
        chart_${chart_id}.draw(data, options);
      }
    </script>
    <div id="chart_${chart_id}" style="width: 200px; height: 200px;"></div>
EOF

}



function summarize_lecture () {


cat <<EOF
<div>
  <div style="margin-left:15%"><hr width="85%"></div>
</div>
<div>
    <div comment="header">
        <div style="float:left"><strong>${CLASS} ${CLASS_WEEKDAY} ${CLASS_TIME}</strong></div>
        <div style="margin-left:20%"> ${CLASS_DATE} Class Coverage: ${DESCRIPTION}</div>
        <div style="float:right">Responses: ${NUM_RESPONDENTS}/${RECORDED_ATTENDEES}</div>
    </div>
    <br>
    <div style="width:20%;float:left">
EOF
    present_chart
cat <<EOF
    </div>

    <div style="margin-left:20%">
        <div comment="feedback-window" class="frame" style="height:200px;border-style: solid;overflow:auto;overflow-y:scroll;;padding:5px;">
            Prompt: ${PROMPT}
            <ol> 
EOF

for ((i=0; i < ${#RESPONSES[@]}; i++)) ; do

  # This is a hack
  IMAGE=$(sed -n '/<img/s|^.*images/\(.*\.gif\).*$|\1|p' <<< ${RESPONSES[$i]} )
  if [ -n "$IMAGE" ] ; then
    if [ ! -e images/$IMAGE ] ; then 
      ln -s  images/_none.gif images/$IMAGE
    fi
  fi 

  echo "<li> ${RESPONSES[$i]} </li>"
done

cat <<EOF
           </ol>
        </div comment="feedback-window">
    </div>
</div>

EOF
}

# This is approach as opposed to a simple `ls` was required because
# of the way CSUN's infrastructure works either because of security concerns
# or a misconfigured filesystem.
X=( $(echo reports/*.env) ) 
for (( i=0; i< ${#X[@]} ; i++ )) ; do
  echo ${X[$i]}
done |sort -nr |\
  while read _report ; do
    source $_report
    # Set the defualts for unspecified data
    # This section should be removed, after final testing.
    # All reports should have this information automatically added.
    [[ -z ${DESCRIPTION} ]]        && DESCRIPTION="&lt;unspecified&gt;"
    [[ -z ${PROMPT} ]]             && PROMPT="Provide general feedback to today's class."
    [[ -z ${RECORDED_ATTENDEES} ]] && RECORDED_ATTENDEES="--"

    summarize_lecture
  done
