#! /bin/bash

# This file needs to be exectued from the parent of both 
#  - the logs directory, and
#  - the reports directory

LOG_FILE="$1"
if [[ ! -f ${LOG_FILE} ]] ; then
  echo "usage: $0 file.log"
  echo "  output is placed into file.env"
  exit 1
fi
FILE_NAME_BASE=$(basename -s .log ${LOG_FILE})
REPORT_FILE=reports/${FILE_NAME_BASE}.env 

if [[ -f ${REPORT_FILE} ]] ; then
  # If there is a report file, source it
  source ${REPORT_FILE}
  # Now reset the dynamic information 
  RATING_AVERAGE=
  RATING_MEDIAN=
  RATING_LOW=
  RATING_HIGH=
  RATINGS=()
  NUM_RESPONDENTS=
  RESPONSES=()
else
  # define the Header values
  FILE_NAME=${REPORT_FILE}
    _session=$(awk -F: '{ print $2}'    <<< ${FILE_NAME_BASE})
  CLASS=$(awk -F- '{ print $1}'           <<< ${_session})
  CLASS_WEEKDAY=$(awk -F- '{ print $2}'   <<< ${_session})
    _hour="$(awk -F- '{ print $3}'     <<< ${_session})"
    _min="$(awk -F: '{ print $3}'      <<< ${FILE_NAME_BASE})"
  CLASS_TIME="${_hour}:${_min}"
  CLASS_DATE=$(awk -F: '{ print $1}'   <<< ${FILE_NAME_BASE})
  DESCRIPTION=
  PROMPT=
  RECORDED_ATTENDEES=
fi

cat ${LOG_FILE}                   |
  sed '/^ *#/d'                   |
  awk -F, '{ print $5 }'          | 
  sed 's/^rating='//              |
  sed '/^-/d'                     |
  sort -n                         > logs/.$$.temp
  while read _value ; do 
     RATINGS+=( "$_value" )
  done < logs/.$$.temp

_num_ratings=${#RATINGS[@]}
_mid=$(( _num_ratings / 2 ))
RATING_LOW=${RATINGS[0]}
RATING_HIGH=${RATINGS[ $(( _num_ratings -1 )) ]}
RATING_MEDIAN=${RATINGS[ ${_mid} ] }

_sum=0
for (( i=0; i < _num_ratings; i++ )) ; do
  _sum=$(bc <<< "$_sum + ${RATINGS[$i]}" )
done
RATING_AVERAGE=$(bc <<< "$_sum / $_num_ratings" )

NUM_RESPONDENTS=$(sed -n '$=' ${LOG_FILE})
 
cat ${LOG_FILE}              | 
  sed '/^ *#/d'              |
  awk -F, '{ print $6 }'     | 
  sed -f response_filter.sed > logs/.$$.temp
  while read _response ; do 
     RESPONSES+=( "$_response" )
  done < logs/.$$.temp
rm -f logs/.$$.temp

# Output the information into the log file
cat > ${REPORT_FILE} <<EOF
# Prepared Date: $(date)

FILE_NAME=${REPORT_FILE}
CLASS=${CLASS}
CLASS_WEEKDAY=${CLASS_WEEKDAY}
CLASS_TIME=${CLASS_TIME}
CLASS_DATE=${CLASS_DATE}
DESCRIPTION="${DESCRIPTION}"
PROMPT=${PROMPT}
RECORDED_ATTENDEES=${RECORDED_ATTENDEES}

# Above is potentially generated from input.html
# Below is generated via the processing of the corresponding log

RATING_AVERAGE=${RATING_AVERAGE}
RATING_MEDIAN=${RATING_MEDIAN}
RATING_LOW=${RATING_LOW}
RATING_HIGH=${RATING_HIGH}

EOF
{
  echo -n "RATINGS=("
  for ((i=0; i< ${#RATINGS[@]}; i++)) ; do
    echo -n " ${RATINGS[$i]}"
  done
  echo ")"
  echo
  echo "NUM_RESPONDENTS=${NUM_RESPONDENTS}"
  echo 
  echo "# Note that  # of RESPONSES can be less than the number of NUM_RESPONDENTS"
  echo "RESPONSES=("
  for ((i=0; i< ${#RESPONSES[@]}; i++)) ; do
    echo "    \"${RESPONSES[$i]}\""
  done
  echo ")"
} >> ${REPORT_FILE}

