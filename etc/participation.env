#! /bin/bash

export PARTICIPATION_HOME
export PARTICIPATION_SOURCED=TRUE

# This file is placed into the $HOME/etc/ directory
if [[ -z "${PARTICIPATION_HOME}" ]] ; then
  # If this script is called separately for testing purposes
  # Then it does not know where the PARTICIPATION_HOME is located
  PARTICIPATION_HOME="$(dirname $0)/.."
fi
  export ADMIN=${PARTICIPATION_HOME}/admin
  export BIN=${PARTICIPATION_HOME}/bin
  export ETC=${PARTICIPATION_HOME}/etc
  export LOGS=${PARTICIPATION_HOME}/logs
  export REPORTS=${PARTICIPATION_HOME}/reports
  export IMAGES=${PARTICIPATION_HOME}/images

PATH="$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"


# LIST of relevant files and their locations
export CLASS_INFO="${PARTICIPATION_HOME}/etc/class_info"

# Reset Relevant Environment Variables
export TZ=America/Los_Angeles
export DATE=$(date)
export FULL_DATE=$(date +%F)
export WEEKDAY=$(date +%A )
export DAY=$(date +%d | sed 's/^0//' )
export MONTH=$(date +%m | sed 's/^0//' )
export HOUR=$(date +%H | sed 's/^0//' )
export MINUTE=$(date +%M | sed 's/^//' )

export CLASS=
export CLASS_DAYS=
export CLASS_WEEKDAY=
export CLASS_TIME=
export CLASS_24TIME=

export LOG_FILE=
export REPORT_FILE=


function realpath () {
   # CSUN web environment does not have realpath, hence the rewrite here
   _path="$1"

   if [[ "${_path:0:1}" != "/" ]] ; then
     _path="$( (cd  $(pwd)/${_path}; pwd ) )"
   fi
   
   echo $_path
}

function lookup_class () {
  _day=$1
  _hour_min=$2

  while read _c _d _12 _24 _w _begin _end  ; do
    [[ $_day != $_w ]]            && continue # Not the right day
    [[ $_hour_min -lt $_begin ]]  && continue # Before the start hour
    [[ $_hour_min -gt $_end  ]]   && continue # After the end hour
    echo $_c $_d $_12 $_24 $_w $_begin $_end
    break
  done < <(sed '/^#/d' ${CLASS_INFO} )
}


function in_session_p() {
  in_session="TRUE"
  if [[ -z $CLASS ]] ; then
    in_session="FALSE"
    # Class is not in session
  fi

  echo ${in_session}
}


function insert_image () {
  _name="$1"

  printf "<img height=\'25px\' alt=\'emoji:${_name}\' " 
  printf "loading=\'lazy\' src=\'images/${_name}.gif\'>"

  # If there is no image for this emoji, then add a symbolic link
  if [[ ! -e ${IMAGES}/${_name}.gif ]] ; then 
        ln -s  ${IMAGES}/_none.gif ${IMAGES}/${_name}.gif
  fi
}


function utf8_2_html () {
  # Given upto 4 valid UTF-8 bytes
  # Transform the 4 bytes to a HTML entity
  # For example
  #   - utf8_decode 0xE2 0x82 0xAC
  #   - returns: &#x20ac;

  case $# in 
    4)
      (( v = ($1 & 0x07) ))
      ;;
    3)
      (( v = ($1 & 0x0F) ))
      ;;
    2)
      (( v = ($1 & 0x1F) ))
      ;;
    1)
      (( v = $1 ))
    ;;
  esac
  shift
  for i in "$@" ; do
    (( v = ( v << 6 ) | ($i & 0x3F) ))
  done

  printf "&#x%X;" $v
}


CLASS_RECORD=$(lookup_class $WEEKDAY $HOUR$MINUTE )

if [[ -n $CLASS_RECORD ]] ; then 
  CLASS=$(awk '{ print $1}'          <<< $CLASS_RECORD )
  CLASS_DAYS=$(awk '{ print $2}'     <<< $CLASS_RECORD )
  CLASS_TIME=$(awk '{ print $3}'     <<< $CLASS_RECORD )
  CLASS_24TIME=$(awk '{ print $4}'   <<< $CLASS_RECORD )
  CLASS_WEEKDAY=$(awk '{ print $5}'  <<< $CLASS_RECORD )
fi


# the default information for recording information.
export DEFAULT_DESCRIPTION="&lt;unspecified&gt;"
export DEFAULT_PROMPT="Provide general feedback."
export DEFAULT_RECORDED_ATTENDEES="--"

export DESCRIPTION
export PROMPT
export RECORDED_ATTENDEES

[[ -z ${DESCRIPTION} ]]        && DESCRIPTION="${DEFAULT_DESCRIPTION}"
[[ -z ${PROMPT} ]]             && PROMPT="${DEFAULT_PROMPT}"
[[ -z ${RECORDED_ATTENDEES} ]] && RECORDED_ATTENDEES="${DEFAULT_RECORDED_ATTENDEES}"



# Then reset the information if class is in session
in_session=$(in_session_p)
if [[ ${in_session} == "TRUE" ]]  ; then
  LOG_FILE=${LOGS}/$FULL_DATE:$CLASS-$CLASS_WEEKDAY-$CLASS_24TIME.log
  REPORT_FILE=${REPORTS}/$FULL_DATE:$CLASS-$CLASS_WEEKDAY-$CLASS_24TIME.env

  if [[ ! -f ${LOG_FILE} ]] ; then 
    # create the files for the session, if not done already
    touch ${LOG_FILE}
    ${BIN}/log2report ${LOG_FILE}
  fi
else
  LOG_FILE=
  REPORT_FILE=
fi
